name: Build Library

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    strategy:
      matrix:
        goos: [linux, darwin]
        goarch: [amd64]
        include:
        # - goos: windows
        #   ext: '.dll'
        - goos: darwin
          ext: '.dylib'
          CC: o64-clang
          CXX: o64-clang++
        - goos: linux
          ext: '.so'
          CC: gcc
          CXX: g++

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20'

    - name: Setup osxcross (for darwin builds only)
      if: matrix.goos == 'darwin'
      uses: mbround18/setup-osxcross@v1
      with:
        osx-version: "12.3"

    - name: Build Library
      run: |
        export GOOS=${{ matrix.goos }}
        export GOARCH=${{ matrix.goarch }}
        export CC=${{ matrix.CC }}
        export CXX=${{ matrix.CXX }}
        export CGO_ENABLED=1
        export PATH="$(pwd)/osxcross/target/bin:$PATH"
        cd go
        go mod tidy
        go build -o sapphirewrapper${{ matrix.ext }} -buildmode=c-shared
      shell: bash

    - name: Upload Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: sapphirewrapper-${{ matrix.goos }}-${{ matrix.goarch }}
        path: ./go/sapphirewrapper${{ matrix.ext }}

    - name: Commit and push built library
      run: |
        git config --global user.name 'github-actions'
        git config --global user.email 'github-actions@github.com'
        mkdir -p bin
        mv ./go/sapphirewrapper${{ matrix.ext }} ./bin/
        git add ./bin/sapphirewrapper${{ matrix.ext }}
        git commit -m "Add built library for ${{ matrix.goos }}-${{ matrix.goarch }}"
        git push
      shell: bash

  release:
    name: Create Release
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Attach artifacts to release
        uses: actions/download-artifact@v2
        with:
          name: sapphirewrapper-${{ matrix.goos }}-${{ matrix.goarch }}
          path: ./artifacts/

      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/sapphirewrapper${{ matrix.ext }}
          asset_name: sapphirewrapper-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.ext }}
          asset_content_type: application/octet-stream