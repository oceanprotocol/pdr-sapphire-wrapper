name: Pytest

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  build:
    name: Build
    runs-on: ubuntu-20.04

    strategy:
      matrix:
        goos: [linux, darwin]
        goarch: [amd64]
        include:
        # - goos: windows
        #   ext: '.dll'
        - goos: darwin
          ext: '.dylib'
          CC: o64-clang
          CXX: o64-clang++
        - goos: linux
          ext: '.so'
          CC: gcc
          CXX: g++

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.19'

    - name: Setup osxcross (for darwin builds only)
      if: matrix.goos == 'darwin'
      uses: mbround18/setup-osxcross@v1
      with:
        osx-version: "11.3"

    - name: Build Library
      run: |
        export GOOS=${{ matrix.goos }}
        export GOARCH=${{ matrix.goarch }}
        export CC=${{ matrix.CC }}
        export CXX=${{ matrix.CXX }}
        export CGO_ENABLED=1
        export PATH="$(pwd)/osxcross/target/bin:$PATH"
        cd go
        go mod tidy
        go build -o sapphirewrapper${{ matrix.ext }} -buildmode=c-shared
      shell: bash

    - name: Upload Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: sapphirewrapper-${{ matrix.goos }}-${{ matrix.goarch }}
        path: ./go/sapphirewrapper${{ matrix.ext }}

  test:
    name: Pytest
    runs-on: ubuntu-20.04
    needs: build
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: [3.6, 3.7, 3.8, 3.9]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Download built library - Linux
        uses: actions/download-artifact@v2
        with:
          name: sapphirewrapper-linux-amd64
          path: ./bin/

      - name: Download built library - Darwin
        uses: actions/download-artifact@v2
        with:
          name: sapphirewrapper-darwin-amd64
          path: ./bin/

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest
          pip install .

      - name: Run tests
        env:
          TEST_PRIVATE_KEY: ${{ secrets.TEST_PRIVATE_KEY }}
        run: |
          pytest
